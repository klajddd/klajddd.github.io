{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm-of-quick-sort/","result":{"data":{"site":{"siteMetadata":{"title":"Financiest"}},"markdownRemark":{"id":"d6c67b6d-9c72-5ac8-a017-2cd63224568f","excerpt":"Quick Sort Python implementation:","html":"<p>Quick Sort</p>\n<p>Python implementation:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Best:</span>\n<span class=\"token comment\"># Time - O(nlog(n))</span>\n<span class=\"token comment\"># Space - O(log(n))</span>\n\n<span class=\"token comment\"># Worst:</span>\n<span class=\"token comment\"># Time - O(n^2)</span>\n<span class=\"token comment\"># Space - O(log(n))</span>\n\n<span class=\"token comment\"># Step 1 we select a pivot, every number &lt; pivot goes to the left</span>\n<span class=\"token comment\"># of the pivot, every number > pivot goes to the right of the pivot.</span>\n<span class=\"token comment\"># At the end, the pivot is at its sorted position in the list.</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">quickSort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    quickSortHelperFunction<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">quickSortHelperFunction</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Base case</span>\n    <span class=\"token keyword\">if</span> start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token comment\"># Start pointer</span>\n    startPointer <span class=\"token operator\">=</span> start <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\"># End pointer</span>\n    endPointer <span class=\"token operator\">=</span> end\n    <span class=\"token comment\"># Select the pivot of the list (here the first element is arbitrarily selected)</span>\n    pivot <span class=\"token operator\">=</span> start\n\n    <span class=\"token comment\"># Specify where should the pivot element be placed in the sorted list</span>\n    <span class=\"token keyword\">while</span> endPointer <span class=\"token operator\">>=</span> startPointer<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>startPointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span>\n                <span class=\"token keyword\">and</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>endPointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>startPointer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>endPointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>endPointer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>startPointer<span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>startPointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            startPointer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>endPointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            endPointer <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\"># Swap the pivot element with the end pointer element</span>\n    <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>endPointer<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>endPointer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># The pivot is now placed in the exact position of the sorted</span>\n    <span class=\"token comment\"># list, with the elements to the left being smaller than it, and</span>\n    <span class=\"token comment\"># the elements to the right being larger than it</span>\n\n    leftPartitionLengthSmaller <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>endPointer <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start <span class=\"token operator\">&lt;</span> end <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>endPointer <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> leftPartitionLengthSmaller<span class=\"token punctuation\">:</span>\n        quickSortHelperFunction<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> endPointer <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        quickSortHelperFunction<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> endPointer <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        quickSortHelperFunction<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> endPointer <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span>\n        quickSortHelperFunction<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> endPointer <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Algorithm of Quick Sort","date":"May 06, 2015","description":null}}},"pageContext":{"slug":"/algorithm-of-quick-sort/","previous":{"fields":{"slug":"/algorithm-of-selection-sort/"},"frontmatter":{"title":"Algorithm of Selection Sort"}},"next":{"fields":{"slug":"/algorithm-of-depth-first-search/"},"frontmatter":{"title":"Algorithm of Depth First Search"}}}}}